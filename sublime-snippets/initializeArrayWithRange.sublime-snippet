<snippet>
	<content><![CDATA[const initializeArrayWithRange = (end, start = 0, step = 1) =>
  Array.from({ length: Math.ceil((end + 1 - start) / step) }).map((v, i) => i * step + start);]]></content>
	<description>Initializes an array containing the numbers in the specified range where `start` and `end` are inclusive with their common difference `step`.  Use `Array.from(Math.ceil((end+1-start)/step))` to create an array of the desired length(the amounts of elements is equal to `(end-start)/step` or `(end+1-start)/step` for inclusive end), `Array.map()` to fill with the desired values in a range. You can omit `start` to use a default value of `0`. You can omit `step` to use a default value of `1`.</description>
	<tabTrigger>initializeArrayWithRange</tabTrigger>
	<scope>source.js</scope>
</snippet>