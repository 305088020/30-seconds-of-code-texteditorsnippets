<snippet>
	<content><![CDATA[const unzipWith = (arr, fn) =>
  arr
    .reduce(
      (acc, val) => (val.forEach((v, i) => acc[i].push(v)), acc),
      Array.from({
        length: Math.max(...arr.map(x => x.length))
      }).map(x => [])
    )
    .map(val => fn(...val));]]></content>
	<description>Creates an array of elements, ungrouping the elements in an array produced by [zip](#zip) and applying the provided function.  Use `Math.max.apply()` to get the longest subarray in the array, `Array.map()` to make each element an array. Use `Array.reduce()` and `Array.forEach()` to map grouped values to individual arrays. Use `Array.map()` and the spread operator (`...`) to apply `fn` to each individual group of elements.</description>
	<tabTrigger>unzipWith</tabTrigger>
	<scope>source.js</scope>
</snippet>
